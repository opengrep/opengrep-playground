name: Rolling Release Electron App

on:
  push:
    branches:
      - main # Triggers on every push to `main`
  pull_request:
    branches:
      - main

permissions:
  contents: write 

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Build for Windows
        run: npm run make-win

      - name: Upload Windows Artifacts (ZIP)
        uses: actions/upload-artifact@v4
        with:
          name: windows-zip
          path: out/make/zip/win32/x64/*

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Build for macOS
        run: npm run make-mac

      - name: Upload macOS ZIP
        uses: actions/upload-artifact@v4
        with:
          name: macos-zip
          path: out/make/zip/darwin/arm64/*

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [x64, arm64]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Install Linux Dependencies
        run: sudo apt-get update && sudo apt-get install -y fakeroot rpm libarchive-tools

      - name: Build for Linux
        run: npm run make-linux -- --arch ${{ matrix.architecture }}

      - name: Upload Linux DEB
        uses: actions/upload-artifact@v4
        with:
          name: linux-deb-${{ matrix.architecture }}
          path: out/make/deb/${{ matrix.architecture }}/*

      - name: Upload Linux RPM
        uses: actions/upload-artifact@v4
        with:
          name: linux-rpm-${{ matrix.architecture }}
          path: out/make/rpm/${{ matrix.architecture }}/*

      - name: Upload Linux ZIP
        uses: actions/upload-artifact@v4
        with:
          name: linux-zip-${{ matrix.architecture }}
          path: out/make/zip/linux/${{ matrix.architecture }}/*

  release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Windows Build (ZIP)
        uses: actions/download-artifact@v4
        with:
          name: windows-zip
          path: out/make/zip/win32/x64

      - name: Download macOS ZIP
        uses: actions/download-artifact@v4
        with:
          name: macos-zip
          path: out/make/zip/darwin/arm64

      - name: Download Linux ZIP (x64)
        uses: actions/download-artifact@v4
        with:
          name: linux-zip-x64
          path: out/make/zip/linux/x64
      
      - name: Download Linux ZIP (arm64)
        uses: actions/download-artifact@v4
        with:
          name: linux-zip-arm64
          path: out/make/zip/linux/arm64
      
      - name: Download Linux DEB (x64)
        uses: actions/download-artifact@v4
        with:
          name: linux-deb-x64
          path: out/make/deb/x64

      - name: Download Linux DEB (arm64)
        uses: actions/download-artifact@v4
        with:
          name: linux-deb-arm64
          path: out/make/deb/arm64

      - name: Download Linux RPM (x64)
        uses: actions/download-artifact@v4
        with:
          name: linux-rpm-x64
          path: out/make/rpm/x64

      - name: Download Linux RPM (arm64)
        uses: actions/download-artifact@v4
        with:
          name: linux-rpm-arm64
          path: out/make/rpm/arm64

      - name: List Downloaded Files (Debug)
        run: ls -R out/make/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: "Rolling Release"
          body: "ðŸš€ This is the latest rolling release built from `main`."
          draft: false
          prerelease: false
          files: |
            out/make/squirrel.windows/x64/*
            out/make/wix/x64/*
            out/make/zip/win32/x64/*
            out/make/*.dmg
            out/make/zip/darwin/arm64/*
            out/make/deb/x64/*
            out/make/deb/arm64/*
            out/make/rpm/x64/*
            out/make/rpm/arm64/*
            out/make/zip/linux/x64/*
            out/make/zip/linux/arm64/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}